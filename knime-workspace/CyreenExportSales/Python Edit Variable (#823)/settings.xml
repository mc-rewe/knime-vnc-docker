<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="settings.xml">
    <entry key="node_file" type="xstring" value="settings.xml"/>
    <config key="flow_stack"/>
    <config key="internal_node_subsettings">
        <entry key="memory_policy" type="xstring" value="CacheSmallInMemory"/>
    </config>
    <config key="model">
        <entry key="sourceCode" type="xstring" value="# %%00037%%%00010import socks%%00010import io%%00010import datetime%%00010import logging%%00010import sys%%00010import paramiko as pm%%00010import pandas as pd%%00010from pathlib import Path%%00010%%00010logging.basicConfig()%%00010log = logging.getLogger(name=__name__)%%00010log.setLevel(logging.DEBUG)%%00010%%00010# Check if we are in Knime%%00010KNIME = None%%00010try:%%00010    tmp = flow_variables%%00010except Exception:%%00010    KNIME = False%%00010else:%%00010    KNIME = True%%00010%%00010USE_PROXY = flow_variables[&quot;PROXY&quot;] %%00010VERSION = &quot;v002&quot;%%00010PROXY_HOST, PROXY_PORT = &quot;techproxy.risnet.de&quot;, 80%%00010SFTP_HOST, SFTP_PORT = &quot;sftp.cyreen.de&quot;, 22%%00010SFTP_USER = &quot;rewe&quot;%%00010CURRENT_DAY = str(datetime.date.today())%%00010CURRENT_TIMESTAMP = str(datetime.datetime.now().isoformat())%%00010PATH_UPLOAD_FOLDER = Path(&quot;inputfiles&quot;) # / Path(CURRENT_DAY)%%00010PATH_UPLOAD_FILE = PATH_UPLOAD_FOLDER / Path(f&quot;{CURRENT_TIMESTAMP}_sales_{VERSION}.csv&quot;)%%00010%%00010# In Knime get variables%%00010if KNIME:%%00010    SSH_PRIV_KEY = flow_variables[&quot;ssh_priv_key&quot;]%%00010    SOURCE_FILE = flow_variables.get(&quot;OUTPUT_FILE&quot;)%%00010%%00010# %%00037%%%00010# PySocks recommends using no arguments,%%00010# because it only supports the defaults anyway.%%00010sock = socks.socksocket()%%00010%%00010# %%00037%%%00010# Set up your proxy information for this socket%%00010if USE_PROXY is not None and USE_PROXY != &quot;None&quot;:%%00010%%00009sock.set_proxy(proxy_type=socks.SOCKS5, addr=PROXY_HOST, port=PROXY_PORT)%%00010key_io = io.StringIO(SSH_PRIV_KEY)%%00010# Adapt to Keytype e.g. if RSAKey %%00010key = pm.Ed25519Key.from_private_key(key_io)%%00010%%00010# Connect the socket%%00010sock.connect((SFTP_HOST, SFTP_PORT))%%00010%%00010# Create your Paramiko Transport%%00010transport = pm.Transport(sock)%%00010transport.connect(username=SFTP_USER, pkey=key)%%00010%%00010#%%00010client = pm.SFTPClient.from_transport(transport)%%00010list = client.listdir()%%00010output_table = pd.DataFrame(list, columns=[&quot;out&quot;])%%00010print(output_table)%%00010# Do stuff%%00010# %%00037%%%00010try:%%00010    client.mkdir(str(PATH_UPLOAD_FOLDER.as_posix()))%%00010except OSError as e:%%00010    log.warning(f&quot;Folder exists {PATH_UPLOAD_FOLDER}&quot;)%%00010%%00010try:%%00010    client.put(SOURCE_FILE, str(PATH_UPLOAD_FILE.as_posix()))%%00010except Exception:%%00010    log.exception(f&quot;ERROR: could not write to ftp {PATH_UPLOAD_FILE}&quot;)%%00010    sys.exit(1)%%00010else:%%00010    log.info(f&quot;OK: written file {PATH_UPLOAD_FILE}&quot;)%%00010finally:%%00010    client.close()%%00010    transport.close()%%00010"/>
        <entry key="rowLimit" type="xint" value="1000"/>
        <entry key="convertMissingToPython" type="xboolean" value="false"/>
        <entry key="convertMissingFromPython" type="xboolean" value="false"/>
        <entry key="sentinelOption" type="xstring" value="MIN_VAL"/>
        <entry key="sentinelValue" type="xint" value="0"/>
        <entry key="chunkSize" type="xint" value="500000"/>
        <entry key="pythonVersionOption" type="xstring" value="python3"/>
        <entry key="python2Command" type="xstring" value=""/>
        <entry key="python3Command" type="xstring" value=""/>
    </config>
    <config key="nodeAnnotation">
        <entry key="text" type="xstring" value="write to sFTP"/>
        <entry key="bgcolor" type="xint" value="16777215"/>
        <entry key="x-coordinate" type="xint" value="849"/>
        <entry key="y-coordinate" type="xint" value="119"/>
        <entry key="width" type="xint" value="142"/>
        <entry key="height" type="xint" value="17"/>
        <entry key="alignment" type="xstring" value="CENTER"/>
        <entry key="borderSize" type="xint" value="0"/>
        <entry key="borderColor" type="xint" value="16777215"/>
        <entry key="defFontSize" type="xint" value="9"/>
        <entry key="annotation-version" type="xint" value="20151123"/>
        <config key="styles"/>
    </config>
    <entry key="customDescription" type="xstring" isnull="true" value=""/>
    <entry key="state" type="xstring" value="IDLE"/>
    <entry key="factory" type="xstring" value="org.knime.python2.nodes.variables.Python2VariablesNodeFactory"/>
    <entry key="node-name" type="xstring" value="Python Edit Variable"/>
    <entry key="node-bundle-name" type="xstring" value="KNIME Python nodes"/>
    <entry key="node-bundle-symbolic-name" type="xstring" value="org.knime.python2.nodes"/>
    <entry key="node-bundle-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-bundle-version" type="xstring" value="4.4.2.v202110181015"/>
    <entry key="node-feature-name" type="xstring" value="KNIME Python Integration"/>
    <entry key="node-feature-symbolic-name" type="xstring" value="org.knime.features.python2.feature.group"/>
    <entry key="node-feature-vendor" type="xstring" value="KNIME AG, Zurich, Switzerland"/>
    <entry key="node-feature-version" type="xstring" value="4.4.2.v202110191522"/>
    <config key="factory_settings"/>
    <entry key="name" type="xstring" value="Python Edit Variable"/>
    <entry key="hasContent" type="xboolean" value="false"/>
    <entry key="isInactive" type="xboolean" value="false"/>
    <config key="ports">
        <config key="port_1">
            <entry key="index" type="xint" value="1"/>
            <entry key="port_dir_location" type="xstring" isnull="true" value=""/>
        </config>
    </config>
    <config key="filestores">
        <entry key="file_store_location" type="xstring" isnull="true" value=""/>
        <entry key="file_store_id" type="xstring" isnull="true" value=""/>
    </config>
</config>
